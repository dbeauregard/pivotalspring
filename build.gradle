plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.gorylenko.gradle-git-properties' version '2.4.2'
	id 'com.github.spotbugs' version "6.0.25"
	id 'checkstyle'
	id 'jacoco'
}

group = 'io.dbeauregard'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
  maven { url 'https://repo.spring.io/snapshot' }
}

ext {
  set('springAiVersion', "1.0.0-M3")
}

dependencies {
	implementation platform("org.springframework.ai:spring-ai-bom:${springAiVersion}")
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-pgvector-store-spring-boot-starter'
	// implementation 'org.springframework.ai:spring-ai-neo4j-store-spring-boot-starter'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  	testImplementation 'org.testcontainers:junit-jupiter'
  	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	// spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

checkstyle {
  ignoreFailures = true
  showViolations = false
//   maxWarnings = 0
}

spotbugs {
//   toolVersion = '4.8.6'
  ignoreFailures = true
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
  reports {
    xml {
      enabled = false
    }
    html {
      enabled = true
    }
  }
}