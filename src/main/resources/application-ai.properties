# spring.profiles.active=ai
io.dbeauregard.pivotalspring.enablerag=true
io.dbeauregard.pivotalspring.baseprompt=You are a helpful online assistant. \
			Respond in a friendly, helpful, and joyful manner. \
			Give succinct and professional answers.
io.dbeauregard.pivotalspring.ragprompt=Use the context from the CONTEXT section to provide accurate answers. \n\
			\n\
			--------------------- \n\
			CONTEXT:\n\
			{question_answer_context} \n\
			--------------------- \n\n
			# Given the context, function, and provided history information and not prior knowledge, \
			# reply to the user question. If the answer is not in the context, inform \
			# the user that you can't answer the question. \

### Spring AI w/ Ollama (https://docs.spring.io/spring-ai/reference/api/chat/ollama-chat.html#_chat_properties)
# spring.ai.ollama.base-url=localhost:11434
# spring.ai.ollama.chat.enabled=true
spring.ai.ollama.chat.options.model=llama3.2
spring.ai.ollama.embedding.options.model=llama3.2
# spring.ai.ollama.chat.options.format=json
# spring.ai.ollama.chat.options.keep_alive=5m

### Vectorstore Config
spring.docker.compose.enabled=true
# spring.ai.vectorstore.neo4j.initialize-schema=true
# spring.ai.vectorstore.neo4j.embedding-dimension=3072
spring.ai.vectorstore.pgvector.initialize-schema=true
spring.ai.vectorstore.pgvector.remove-existing-vector-store-table=true
spring.ai.vectorstore.pgvector.index-type=none
# spring.ai.vectorstore.pgvector.dimensions=2000

# Log AI Request and Responses
logging.level.org.springframework.ai.chat.client.advisor=DEBUG