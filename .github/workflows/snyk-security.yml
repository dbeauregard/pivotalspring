# A workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
    
      - uses: snyk/actions/setup@master
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
    
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"    

      - name: Set variables
        run: |
          # Extract the Gradle Project Name
          NAME=$(./gradlew :pivotalspring-server:properties | grep name: | cut -d " " -f 2-)
          echo "NAME: $NAME"
          echo "DOCKER_TAG=$NAME:CURRENT" >> $GITHUB_ENV

      # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
      # Use || true to not fail the pipeline, or continue-on-error
      - name: Snyk Code (SAST) test
        run: snyk code test --sarif | tee snyk-code.sarif # || true
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      # Server
      - name: Snyk Open Source (SCA) test
        # run: snyk test --report --sarif | tee snyk-sca.sarif
        run: snyk test --gradle-sub-project=pivotalspring-server --sarif | tee snyk-sca-server.sarif
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      # Client
      - name: Snyk Open Source (SCA) test
        # run: snyk test --report --sarif | tee snyk-sca.sarif
        run: snyk test --gradle-sub-project=pivotalspring-client --sarif | tee snyk-sca-client.sarif
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
      # Use || true to not fail the pipeline.
      - name: Snyk IaC test and report
        #run: snyk iac test --report --sarif | tee snyk-iaas.sarif # || true
        run: snyk iac test --sarif | tee snyk-iaas.sarif
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # Runs Snyk Container (Container and SCA) analysis and uploads result to Snyk.
      - name: Snyk Container test
        run: snyk container test dbeauregard/$DOCKER_TAG --sarif | tee snyk-oci.sarif # --file=Dockerfile
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload SAST results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
          category: "SAST"

      - name: Upload SCA results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-sca-server.sarif
          category: "SCA-Server"

      - name: Upload SCA results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-sca-client.sarif
          category: "SCA-Client"
      
      - name: Upload IaaS results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-iaas.sarif
          category: "IAAS"

      #Snyk Cleanup sarif report
      - name: Replace security-severity undefined for license-related findings 
        run: |
          sed -i 's/"security-severity": "undefined"/"security-severity": "0"/g' snyk-oci.sarif
          sed -i 's/"security-severity": "null"/"security-severity": "0"/g' snyk-oci.sarif

      - name: Upload OCI results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        # continue-on-error: true
        with:
          sarif_file: snyk-oci.sarif