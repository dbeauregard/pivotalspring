# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        build-scan-publish: true
        build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
        build-scan-terms-of-use-agree: "yes"

    - name: Set variables
      run: |
        version=$(./gradlew :pivotalspring-server:properties -Pversion-build=${{ github.run_number }} | grep version: | cut -d " " -f 2-)
        name=$(./gradlew :pivotalspring-server:properties -Pversion-build=${{ github.run_number }} | grep name: | cut -d " " -f 2-)
        echo "DOCKER-TAG=$name:$version" >> $GITHUB_ENV

    - name: Build (Assemble, Check, Test)
      run: ./gradlew build --scan -Pversion-build=${{ github.run_number }}

    - name: Build OCI Image 
      run: ./gradlew :pivotalspring-server:bootBuildImag -Pversion-build=${{ github.run_number }}

    - name: Upload Server Jar
      uses: actions/upload-artifact@v4
      with:
        name: Server-BootJar
        path: server/build/libs/pivotalspring-server-*.jar

    - name: Upload Client Jar
      uses: actions/upload-artifact@v4
      with:
        name: Client-BootJar
        path: client/build/libs/pivotalspring-client-*.jar

    - name: Upload SpotBugs
      uses: actions/upload-artifact@v4
      with:
        name: SpotBugs Report
        path: server/build/reports/spotbugs/*.html

    - name: Upload Jacoco
      uses: actions/upload-artifact@v4
      with:
        name: Jacoco Report
        path: server/build/reports/jacoco/test/html
    
    - name: Upload Checkstyle
      uses: actions/upload-artifact@v4
      with:
        name: CheckStyle Report
        path: server/build/reports/checkstyle/*.html

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      run: ./gradlew publish -Pversion-build=${{ github.run_number }}
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Tag and Push OCI Image
      run: |
        docker tag ${{ env.DOCKER-TAG }} dbeauregard/${{ env.DOCKER-TAG }}
        docker push dbeauregard/${{ env.DOCKER-TAG }}

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4

